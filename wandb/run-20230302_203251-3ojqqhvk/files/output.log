
getting edges...
batched edges torch.Size([39600, 256])
Shape of x:  torch.Size([400, 3])
Shape of node attrs:  torch.Size([400, 256])
Shape of edges:  torch.Size([2, 39600])
Shape of edge attrs:  torch.Size([39600, 256])
Traceback (most recent call last):
  File "main.py", line 148, in <module>
    loss, h = train(h, x, edges, edge_attr)
  File "main.py", line 136, in train
    loss.backward()
  File "/users/rvinod/.local/lib/python3.7/site-packages/torch/_tensor.py", line 396, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/users/rvinod/.local/lib/python3.7/site-packages/torch/autograd/__init__.py", line 175, in backward
    allow_unreachable=True, accumulate_grad=True)  # Calls into the C++ engine to run the backward pass
RuntimeError: Trying to backward through the graph a second time (or directly access saved tensors after they have already been freed). Saved intermediate values of the graph are freed when you call .backward() or autograd.grad(). Specify retain_graph=True if you need to backward through the graph a second time or if you need to access saved tensors after calling backward.
torch.Size([400, 256])
torch.Size([400, 256])
torch.Size([400, 3])
label pred torch.Size([400, 1])
Loss:  2.1918435096740723
torch.Size([400, 256])
torch.Size([400, 256])
torch.Size([400, 3])
label pred torch.Size([400, 1])